local Players = game:GetService("Players")
local player = Players.LocalPlayer
local Character = player.Character or player.CharacterAdded:Wait()
player.CharacterAdded:Connect(function(v) Character = v end)

local leaderstats = player:WaitForChild("leaderstats")
local stage = leaderstats:FindFirstChild("Stage") or leaderstats:FindFirstChild("Stages")

local function extractNumber(v)
    local str = tostring(v)
    local match = str:match("%d+%.?%d*")
    if match then
        return tonumber(match)
    else
        return nil
    end
end

local currentstage = nil

local function DoObby()
    if not currentstage then
        if Start == "Current Stage" then
            if stage then
                currentstage = stage.Value
            else
                warn("ERROR: Cannot determine Current Stage. Please enter the stage number manually. Alternatively, if there's a nearby teleport, please walk through there before trying again.")
                if Looped then
                    return true
                end
            end
        else
            currentstage = Start
        end
    end
    local checkpointfolder = nil
    local loop = 0
    local function SearchForFolder(v)
        local IsNumberCheck = extractNumber(v)
        if IsNumberCheck and #v.Parent:GetChildren() > 2 then
            local FoundStages = 1
            local FoundCurrentStage
            if IsNumberCheck == currentstage then
                FoundCurrentStage = true
            else
                FoundCurrentStage = false
            end
            for _,v2 in pairs(v.Parent:GetChildren()) do
                loop += 1
                if loop == 7000 then
                    loop = 0
                    task.wait()
                end
                local IsNumberCheck2 = extractNumber(v2)
                if IsNumberCheck2 then
                    FoundStages += 1
                    if IsNumberCheck2 == currentstage then
                        FoundCurrentStage = true
                    end
                end
            end
            if FoundStages > #v.Parent:GetChildren()/2 and FoundCurrentStage then
                checkpointfolder = v.Parent
                return
            end
        end
    end
    for _,v in pairs(workspace:GetDescendants()) do
        loop += 1
        if loop == 7000 then
            loop = 0
            task.wait()
        end
        if checkpointfolder then
            break
        end
        if v:IsA("SpawnLocation") then
            SearchForFolder(v)
            if not checkpointfolder then
                SearchForFolder(v.Parent)
            end
        end
    end
    if not checkpointfolder then
        for _,v in pairs(workspace:GetDescendants()) do
            loop += 1
            if loop == 7000 then
                loop = 0
                task.wait()
            end
            if checkpointfolder then
                break
            end
            if v:IsA("BasePart") then
                SearchForFolder(v)
            end
        end
    end
    if not checkpointfolder then
        for _,v in pairs(workspace:GetDescendants()) do
            loop += 1
            if loop == 7000 then
                loop = 0
                task.wait()
            end
            if checkpointfolder then
                break
            end
            if v:IsA("Model") then
                SearchForFolder(v)
            end
        end
    end
    if checkpointfolder then
        while currentstage < Finish do
            local stagefound = false
            for _,v in pairs(checkpointfolder:GetChildren()) do
                if currentstage >= Finish then
                    break
                end
                local number = extractNumber(v)
                local function Teleport(v2)
                    if number == currentstage + 1 then
                        stagefound = true
                        if not Character or not Character:FindFirstChild("HumanoidRootPart") then
                            repeat
                                task.wait()
                            until Character and Character:FindFirstChild("HumanoidRootPart")
                        end
                        Character.HumanoidRootPart.CFrame = v2 * CFrame.new(0, 2, 0)
                        currentstage += 1
                        task.wait(WaitBetweenTeleport)
                    end
                end
                if v:IsA("BasePart") then
                    Teleport(v)
                elseif v:IsA("Model") then
                    local spawnLocation = v:FindFirstChildOfClass("SpawnLocation")
                    local basepart = v:FindFirstChildWhichIsA("BasePart")
                    if spawnLocation then
                        Teleport(spawnLocation.CFrame)
                    elseif v.PrimaryPart then
                        Teleport(v.PrimaryPart.CFrame)
                    elseif #v:GetChildren() < 2 and basepart then
                        Teleport(basepart.CFrame)
                    else
                        Teleport(v:GetPivot())
                    end
                else
                    warn("ERROR: Checkpoint is neither a BasePart or Model. Looks like this script needs some work.")
                end
            end
            if stagefound == false then
                break
            end
        end
    else
        warn("ERROR: Checkpoints not found!")
    end
end

if Looped then
    while Looped do
        local error = DoObby()
        if error then
            break
        end
        task.wait()
    end
else
    DoObby()
end
