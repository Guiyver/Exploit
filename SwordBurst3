if _G.QeIAvfMGdZxJepfeF8Nu8Lzd4cuIjAo == "QeIAvfMGdZxJepfeF8Nu8Lzd4cuIjAo" then return end _G.QeIAvfMGdZxJepfeF8Nu8Lzd4cuIjAo = "QeIAvfMGdZxJepfeF8Nu8Lzd4cuIjAo"

--Variables
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
Player.CharacterAdded:Connect(function(v) Character = v end)
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Systems = ReplicatedStorage:WaitForChild("Systems")
local Combat = Systems:WaitForChild("Combat")

local UseSkill = Systems:WaitForChild("Skills"):WaitForChild("UseSkill")
local PlayerAttack = Combat:WaitForChild("PlayerAttack")
local PlayerSkillAttack = Combat:WaitForChild("PlayerSkillAttack")
local Pickup = Systems:WaitForChild("Drops"):WaitForChild("Pickup")
local Drops = ReplicatedStorage:WaitForChild("Drops")
local Mobs = workspace:WaitForChild("Mobs")
local BossArenas = workspace:WaitForChild("BossArenas")

--Funcs
local function GetDistanceFromCharacter(Object)
    assert(Object:IsA("Model") or Object:IsA("BasePart"), "Script broke, this shouldn't have happened.")
    if not Character or not Character:FindFirstChild("HumanoidRootPart") then print("Can't find character.") return end
    local Position = Object:IsA("Model") and Object.HumanoidRootPart.Position or Object.Position
    return (Position - Character.HumanoidRootPart.Position).Magnitude
end

local function Attack(Mob)
--    PlayerAttack:FireServer({Mob})

    UseSkill:FireServer({"Whirlwind"})
    for i = 1,3 do
        local args = {
            [1] = {
                [1] = Mob
            },
            [2] = "Whirlwind",
            [3] = i
        }
        PlayerSkillAttack:FireServer(unpack(args))
    end
end

local function extractNumbersFromString(str)
    local numericString = string.gsub(str, "%D", "")
    local number = tonumber(numericString)
    return number
end

local function CheckForCharacter()
    if Character and Character:FindFirstChild("HumanoidRootPart") then
        return true
    else
        return false
    end
end

--Get rid of clutter
-- workspace.ChildAdded:Connect(function(Child)
--     if Child:IsA("Part") and (Child.Name == "Part" or Child.Name == "DamageNumber") then
--         task.wait()
--         task.spawn(Child.Destroy, Child)
--     end
-- end)

-- workspace.Effects.ChildAdded:Connect(function(Child)
--     if Child.Name == "HitEffect" then
--         task.wait()
--         task.spawn(Child.Destroy, Child)
--     end
-- end)

-- for _,v in next, getgc(true) do if typeof(v) == "table" and rawget(v, "ShowDamageNumber") then rawset(v, "ShowDamageNumber", function()end) end end

local Teleporting = 0
task.spawn(function()
    while true do
        if Teleporting > 0 then
            task.wait(1)
            Teleporting -= 1
        else
            task.wait()
        end
    end
end)
task.spawn(function()
    while true do
        if KillAura then
            local attacked = false
            for _,v in pairs(Mobs:GetChildren()) do
                if CheckForCharacter() and Teleporting == 0 and v:IsA("Model") and v:FindFirstChild("PKIndicator") and v:FindFirstChild("HumanoidRootPart") and v.PKIndicator.Transparency == 0 and GetDistanceFromCharacter(v) < MaxDistance then
                    attacked = true
                    Attack(v)
                    task.wait(AttackSpeed)
                end
            end
            if not attacked then
                task.wait()
            end
        else
            task.wait()
        end
    end
end)
task.spawn(function()
    -- Auto pickup
    while true do
        if AutoPickUp then
            for i,v in pairs(Drops:GetChildren()) do
                if v:IsA("Folder") then
                    Pickup:FireServer(v)
                end
            end
        end
        task.wait(1)
    end
end)
task.spawn(function()
    --AutoFarm
    local lasttarget = nil
    while true do
        if AutoFarm and CheckForCharacter() then
            local closestenemy = nil
            local ChosenArena = nil
            for i,tablename in ipairs(AutoFarmList) do
                for _,arena in pairs(BossArenas:GetChildren()) do
                    if arena.Name:match(tablename) then
                        ChosenArena = arena
                        break
                    end
                end
                if ChosenArena then
                    local cooldown = extractNumbersFromString(ChosenArena.Spawn.ArenaBillboard.Frame.StatusLabel.Text)
                    if cooldown <= 15 then
                        closestenemy = ChosenArena.Spawn
                    end
                end
                for _,v in pairs(Mobs:GetChildren()) do
                    if v:IsA("Model") and v:FindFirstChild("PKIndicator") and v.PKIndicator.Transparency == 0 then
                        if v.Name:match(tablename) then
                            if IncludeGiants then
                                if closestenemy then
                                    if GetDistanceFromCharacter(closestenemy) > GetDistanceFromCharacter(v) then
                                        closestenemy = v
                                    end
                                else
                                    closestenemy = v
                                end
                            else
                                if not v.Name:match("Giant") then
                                    if closestenemy then
                                        if GetDistanceFromCharacter(closestenemy) > GetDistanceFromCharacter(v) then
                                            closestenemy = v
                                        end
                                    else
                                        closestenemy = v
                                    end
                                end
                            end
                        end
                    end
                end
                if closestenemy then
                    break
                end
            end
            local closestenemyCFrame = nil
            if closestenemy then
                if not lasttarget then
                    lasttarget = closestenemy
                else
                    if lasttarget ~= closestenemy then
                        lasttarget = closestenemy
                        Teleporting = 2
                    end
                end
                local distance
                if MaxDistance > 30 then
                    distance = 30
                else
                    distance = MaxDistance - 1
                end
                if ChosenArena and (closestenemy.Name == ChosenArena.Name or closestenemy == ChosenArena.Spawn) then
                    if closestenemy:IsA("BasePart") then
                        closestenemyCFrame = closestenemy.CFrame
                        Character.HumanoidRootPart.CFrame = closestenemyCFrame * CFrame.new(0,distance,0)
                    else
                        closestenemyCFrame = closestenemy.HumanoidRootPart.CFrame
                        Character.HumanoidRootPart.CFrame = CFrame.new(closestenemyCFrame.X,ChosenArena.Spawn.CFrame.Y+distance,closestenemyCFrame.Z)
                    end
                else
                    if closestenemy:IsA("BasePart") then
                        closestenemyCFrame = closestenemy.CFrame
                        Character.HumanoidRootPart.CFrame = closestenemyCFrame * CFrame.new(0,-distance,0)
                    else
                        closestenemyCFrame = closestenemy.HumanoidRootPart.CFrame
                        Character.HumanoidRootPart.CFrame = closestenemyCFrame * CFrame.new(0,-distance,0)
                    end
                end
            end
            task.wait()
            if CheckForCharacter() and not AutoFarm and closestenemyCFrame then
                Character.HumanoidRootPart.CFrame = closestenemyCFrame
            end
        else
            task.wait()
        end
    end
end)
