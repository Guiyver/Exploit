

if _G.RtLqJfPmXsGvNwYzAeBcDxHkIuOqTp == "RtLqJfPmXsGvNwYzAeBcDxHkIuOqTp" then return end _G.RtLqJfPmXsGvNwYzAeBcDxHkIuOqTp = "RtLqJfPmXsGvNwYzAeBcDxHkIuOqTp"

local players = game:GetService("Players")
local runService = game:GetService("RunService")
local workspace = game:GetService("Workspace")
local plr = players.LocalPlayer
local Character = plr.Character or plr.CharacterAdded:Wait()
plr.CharacterAdded:Connect(function(v) Character = v end)

local potentialsubjects = {}
local espsubjects = {}
local savedItemSearch = ItemSearch
local savedItemExact = ItemExact
local savedItemBlacklist = ItemBlacklist
local savedItemExactBlacklist = ItemExactBlacklist

-- Function to create a NameTag GUI
local function createNameTag(name)
    local nameTag = Instance.new("BillboardGui")
    nameTag.Name = name
    nameTag.Enabled = false
    nameTag.Size = UDim2.new(0, 200, 0, 50)
    nameTag.AlwaysOnTop = true
    nameTag.StudsOffset = Vector3.new(0, 1.8, 0)

    local tag = Instance.new("TextLabel", nameTag)
    tag.Name = "Tag"
    tag.BackgroundTransparency = 1
    tag.Position = UDim2.new(0, -50, 0, 0)
    tag.Size = UDim2.new(0, 300, 0, 20)
    tag.TextSize = 15
    tag.TextColor3 = Color3.fromRGB(100, 100, 100)
    tag.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    tag.TextStrokeTransparency = 0.4
    tag.Text = "nil"
    tag.Font = Enum.Font.SourceSansBold
    tag.TextScaled = false
    return nameTag
end

local function createHighlight(subject)
    local highlight = Instance.new("Highlight")
    highlight.Parent = subject
    highlight.Adornee = subject
    highlight.RobloxLocked = true
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Enabled = true
    highlight.FillTransparency = .4
    highlight.OutlineTransparency = .1
    return highlight
end

local function CheckForCharacter()
    if Character and Character:FindFirstChild("HumanoidRootPart") then
        return true
    end
    return false
end

local function GetModelCenter(subject)
    if subject.PrimaryPart then
        return subject.PrimaryPart.Position
    else
        local parts = subject:GetDescendants()
        local totalPosition = Vector3.new()
        local count = 0
        for _, part in pairs(parts) do
            if part:IsA("BasePart") then
                totalPosition = totalPosition + part.Position
                count = count + 1
            end
        end
        return totalPosition / count
    end
end

local function getDistance(subject)
    if subject:IsA("Model") then
        local modelcenter = GetModelCenter(subject)
        return (Character.HumanoidRootPart.Position - modelcenter).Magnitude
    else
        return (Character.HumanoidRootPart.Position - subject.Position).Magnitude
    end
end

local function createModelCenter(subject)
    local part = Instance.new("Part")
    part.Parent = subject
    part.Anchored = false
    part.CanCollide = false
    part.Transparency = 1
    part.Position = GetModelCenter(subject)

    local closestpart = nil
    for _,v in pairs(subject:GetDescendants()) do
        if v:IsA("BasePart") then
            if closestpart then
                if (closestpart.Position - part.Position).Magnitude > (v.Position - part.Position).Magnitude then
                    closestpart = v
                end
            else
                closestpart = v
            end
        end
    end

    local weldconstraint = Instance.new("WeldConstraint")
    weldconstraint.Parent = part
    weldconstraint.Part0 = part
    weldconstraint.Part1 = closestpart
    return part
end

-- Function to load a character's ESP
local function createESP(subject)
    table.insert(potentialsubjects,subject)
    local distance = getDistance(subject)
    if distance > MaxDistance then
        repeat
            task.wait(.25)
            if not subject or not subject:IsDescendantOf(workspace) then
                break
            end
            if CheckForCharacter() then
                distance = getDistance(subject)
            end
        until distance <= MaxDistance
        if not subject or not subject:IsDescendantOf(workspace) then
            return
        end
    end
    table.insert(espsubjects,subject)
    local player = players:GetPlayerFromCharacter(subject)
    local function FindTagPart(subject)
        if subject:IsA("Model") then
            return subject.PrimaryPart or createModelCenter(subject)
        else
            return subject
        end
    end
    local tagpart = FindTagPart(subject)
    local nameTag = createNameTag(subject.Name .. "NameTag")
    nameTag.Parent = subject
    nameTag.Adornee = tagpart

    local tag = nameTag:FindFirstChild("Tag")
    local function updateTag()
        if not CheckForCharacter() then return end
        if not tagpart then
            tagpart = FindTagPart()
        end
        distance = getDistance(subject)
        if distance <= MaxDistance then
            nameTag.Enabled = true
            local highlight = subject:FindFirstChildOfClass("Highlight")
            local displayName
            if player then
                displayName = player.DisplayName == player.Name and player.Name or player.DisplayName .. "(" .. player.Name .. ")"
                if UseTeamColor then
                    tag.TextColor3 = player.TeamColor.Color
                    if highlight then
                        highlight.FillColor = player.TeamColor.Color
                        highlight.OutlineColor = player.TeamColor.Color
                    end
                else
                    local color = plr.TeamColor == player.TeamColor and TeamColor or EnemyColor
                    tag.TextColor3 = color
                    if highlight then
                        highlight.FillColor = color
                        highlight.OutlineColor = color
                    end
                end
            else
                displayName = subject.Name
                tag.TextColor3 = ItemColor
                if highlight then
                    highlight.FillColor = ItemColor
                    highlight.OutlineColor = ItemColor
                end
            end
            tag.Text = displayName .. "(" .. math.floor(distance) .. ")"
        else
            nameTag.Enabled = false
        end
    end

    local updateConnection
    updateConnection = runService.RenderStepped:Connect(function()
        if not subject or not subject:IsDescendantOf(workspace) or not table.find(potentialsubjects,subject) then
            if updateConnection then updateConnection:Disconnect() end
            return
        end
        if subject:IsA("Model") then
            if not subject:FindFirstChildWhichIsA("BasePart") then
                if updateConnection then updateConnection:Disconnect() end
                return
            end
        end
        updateTag()
    end)
end

local function playerConnections(player)
    if player.Character and player.Character.PrimaryPart then
        task.spawn(function()
            createESP(player.Character)
        end)
    end
    player.CharacterAdded:Connect(function()
        player.Character:WaitForChild("HumanoidRootPart")
        createESP(player.Character)
    end)
end
for _,player in pairs(players:GetPlayers()) do
    if player ~= plr then
        playerConnections(player)
    end
end
players.PlayerAdded:Connect(function(player)
    playerConnections(player)
end)

local function CheckIfBlacklisted(itemname)
    local blacklisted = false
    for _,blacklist in pairs(ItemBlacklist) do
        blacklist = blacklist:lower()
        if string.find(itemname,blacklist) then
            blacklisted = true
        end
    end
    if not blacklisted then
        for _,blacklist in pairs(ItemExactBlacklist) do
            blacklist = blacklist:lower()
            if itemname == blacklist then
                blacklisted = true
            end
        end
    end
    return blacklisted
end

local function itemConnections(item)
    if not item:IsA("Model") and not item:IsA("BasePart") then return end
    if item:IsA("Model") and not item:FindFirstChildOfClass("BasePart") then return end
    local itemname = item.Name:lower()
    for _,keyword in pairs(ItemSearch) do
        keyword = keyword:lower()
        if string.find(itemname, keyword) then
            local blacklisted = CheckIfBlacklisted(itemname)
            if not blacklisted then
                task.spawn(function()
                    createESP(item)
                end)
            end
            return
        end
    end
    for _,keyword in pairs(ItemExact) do
        keyword = keyword:lower()
        if itemname == keyword then
            task.spawn(function()
                createESP(item)
            end)
            return
        end
    end
end
for _,item in pairs(workspace:GetDescendants()) do
    itemConnections(item)
end
workspace.DescendantAdded:Connect(function(item)
    task.wait(1)
    itemConnections(item)
end)

runService.RenderStepped:Connect(function()
    for i,v in pairs(espsubjects) do
        if not v or not v:IsDescendantOf(workspace) then
            table.remove(espsubjects,i)
        end
    end
    if not CheckForCharacter() then return end
    table.sort(espsubjects, function(a, b)
        return getDistance(a) < getDistance(b)
    end)
    for i,v in pairs(espsubjects) do
        local distance = getDistance(v)
        if i <= 25 and distance <= MaxDistance then
            if not v:FindFirstChildOfClass("Highlight") then
                local highlight = createHighlight(v)
            end
        else
            local highlight = v:FindFirstChildOfClass("Highlight")
            if highlight then
                highlight:Destroy()
            end
        end
    end
end)

local function ItemWhiteListChanged()
    for _,item in pairs(workspace:GetDescendants()) do
        if not table.find(potentialsubjects,item) then
            itemConnections(item)
        end
    end
end

local function ItemBlackListChanged()
    for i,item in pairs(potentialsubjects) do
        local itemname = item.Name:lower()
        local blacklisted = CheckIfBlacklisted(itemname)
        if blacklisted then
            local i2 = table.find(item,espsubjects)
            if i2 then
                local highlight = espsubjects[i2]:FindFirstChildOfClass("Highlight")
                if highlight then
                    highlight:Destroy()
                end
                table.remove(espsubjects,i2)
            end
            table.remove(potentialsubjects,i)
        end
    end
end

while task.wait(1) do
    for i,v in pairs(potentialsubjects) do
        if not v or not v:IsDescendantOf(workspace) then
            table.remove(potentialsubjects,i)
        end
    end
    if savedItemSearch ~= ItemSearch then
        savedItemSearch = ItemSearch
        ItemWhiteListChanged()
    end
    if savedItemExact ~= ItemExact then
        savedItemExact = ItemExact
        ItemWhiteListChanged()
    end
    if savedItemBlacklist ~= ItemBlacklist then
        savedItemBlacklist = ItemBlacklist
        ItemBlackListChanged()
    end
    if savedItemExactBlacklist ~= ItemExactBlacklist then
        savedItemExactBlacklist = ItemExactBlacklist
        ItemBlackListChanged()
    end
end
